apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubermanifests.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: app
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubermanifests.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysqldb
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubermanifests.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: app
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubermanifests.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: app
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  valueFrom:
                    configMapKeyRef:
                      key: MYSQL_DATABASE
                      name: env
                - name: MYSQL_DOCKER_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: MYSQL_DOCKER_PORT
                      name: env
                - name: MYSQL_LOCAL_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: MYSQL_LOCAL_PORT
                      name: env
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: MYSQL_ROOT_PASSWORD
                      name: env
                - name: NODE_DOCKER_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: NODE_DOCKER_PORT
                      name: env
                - name: NODE_LOCAL_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: NODE_LOCAL_PORT
                      name: env
              image: node-mysql-app
              name: app
              ports:
                - containerPort: 3000
              resources: {}
              stdin: true
              tty: true
              volumeMounts:
                - mountPath: /app
                  name: app-claim0
                - mountPath: app/node_modules
                  name: app-claim1
          restartPolicy: Always
          volumes:
            - name: app-claim0
              persistentVolumeClaim:
                claimName: app-claim0
            - name: app-claim1
              persistentVolumeClaim:
                claimName: app-claim1
    status: {}
  - apiVersion: v1
    data:
      MYSQL_DATABASE: library
      MYSQL_DOCKER_PORT: "3306"
      MYSQL_LOCAL_PORT: "3306"
      MYSQL_ROOT_PASSWORD: root
      NODE_DOCKER_PORT: "3000"
      NODE_LOCAL_PORT: "3000"
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app-env
      name: env
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app-claim0
      name: app-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app-claim1
      name: app-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubermanifests.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      containers:
        - args:
            - mysqld
            - --sql_mode=
            - --innodb-flush-log-at-trx-commit=0
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DATABASE
                  name: env
            - name: MYSQL_DOCKER_PORT
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DOCKER_PORT
                  name: env
            - name: MYSQL_LOCAL_PORT
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_LOCAL_PORT
                  name: env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: env
            - name: NODE_DOCKER_PORT
              valueFrom:
                configMapKeyRef:
                  key: NODE_DOCKER_PORT
                  name: env
            - name: NODE_LOCAL_PORT
              valueFrom:
                configMapKeyRef:
                  key: NODE_LOCAL_PORT
                  name: env
          image: mysql
          name: mysqldb
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /etc/mysql
              name: db-config
            - mountPath: /var/lib/mysql
              name: db-data
            - mountPath: /docker-entrypoint-initdb.d/
              name: mysqldb-claim2
              readOnly: true
      restartPolicy: OnFailure
      volumes:
        - name: db-config
          persistentVolumeClaim:
            claimName: db-config
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
        - name: mysqldb-claim2
          persistentVolumeClaim:
            claimName: mysqldb-claim2
            readOnly: true
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-config
      name: db-config
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-data
      name: db-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb-claim2
      name: mysqldb-claim2
    spec:
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

